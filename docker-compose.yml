version: '3.9'

services:
  web:
    image: bigmackiller/finaltask:djadoc
    # build: ./app
    command: sh -c "python manage.py collectstatic --noinput && python manage.py migrate && python manage.py createsuperuser --noinput && gunicorn docker_django.wsgi:application --bind 0.0.0.0:8000"
    environment:
      - DJANGO_SUPERUSER_USERNAME=admin
      - DJANGO_SUPERUSER_PASSWORD=admin
      - DJANGO_SUPERUSER_EMAIL=admin@example.com
      - DEBUG=1
      - SECRET_KEY=foo
      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1] 
      - SQL_ENGINE=django.db.backends.postgresql
      - SQL_DATABASE=hello_django_dev
      - SQL_USER=hello_django
      - SQL_PASSWORD=hello_django
      - SQL_HOST=db
      - SQL_PORT=5432
      - DATABASE=postgres
    volumes:
      - static_volume:/usr/src/app/staticfiles
    ports:
      - 8000:8000
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'python manage.py check'"]
      interval: 7s
      timeout: 3s
      retries: 5
    depends_on:
      db:
        condition: service_healthy
  db:
    image: postgres:13.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=hello_django
      - POSTGRES_PASSWORD=hello_django
      - POSTGRES_DB=hello_django_dev
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U hello_django -d hello_django_dev'"]
      interval: 10s
      timeout: 3s
      retries: 5

  nginx:
    image: bigmackiller/finaltask:nginxx
    # build: ./nginx
    volumes:
      - static_volume:/usr/src/app/staticfiles/
    ports:
      - 1337:80
    depends_on:
      web:
        condition: service_healthy

volumes:
  postgres_data:
  static_volume:
